---
title: Chip Component
related:
  - Avatar: /components/avatars/
  - Icon: /components/icons/
  - Select: /components/selects/
---

<script context="module">
  export async function preload() {
    let sources = await this.fetch('examples/Chip.json');
    sources = await sources.json();
    return { sources };
  }
</script>

<script>
  import Example, { setExamples } from '@/components/examples/Example.svelte';
  import Playground from '@/playground/Chip.svelte';
  import * as Examples from '@/examples/Chip';
  export let sources;
  setExamples([sources, Examples]);
</script>

# Chips

The `Chip` component is used to convey small pieces of information. Using the close property, the chip becomes interactive, allowing user interaction.

## Playground

Chips come in the following variations: Default, label, closeable, outlined, pill. The default slot of `Chip` will also accept avatars and icons alongside text.
<Playground />

## API

- [Chip](/api/Chip/)

## Examples

Below is a collection of simple to complex examples.

### Colored

Any color from the Material Design palette can be used to change a chips color.
<Example name="colored" />

### Icon

Chips can use text or any icon available in any font library.
<Example name="icon" />

### Outlined

Outlined chips inherit their border color from the current text color.
<Example name="outlined" />

### Label

Label chips have reduced border-radius.
<Example name="label" />

### Sizes

Chip component can have various sizes from `x-small` to `x-large`.
<Example name="sizes" />

### Closable

Closable chips can be controlled by the active prop. You can also listen to the `on:close` event if you want to know when a chip has been closed.

<Example name="closable" />
