---
title: Lists
---

<script context="module">
  export async function preload() {
    let sources = await this.fetch('examples/components/lists.json');
    sources = await sources.json();
    return { sources };
  }
</script>

<script>
  import { Example, setExamples } from '@shared';
  import * as Examples from '@examples/components/lists';
  export let sources;
  setExamples([sources, Examples]);
</script>

# Lists

The `List` component is used to display information. It can contain an avatar, content, actions, subheaders and much more. Lists present content in a way that makes it easy to identify a specific item in a collection. They provide a consistent styling for organizing groups of text and images.

## API

- [List](/api/List/)
- [ListGroup](/api/ListGroup/)
- [ListItem](/api/ListItem/)

## Examples

Below is a collection of simple to complex examples.

### Basic

This is a basic example.
<Example name="basic" />

### Disabled

You cannot interact with disabled `List`.
<Example name="disabled" />

### Dense

Smol
<Example name="dense" />

### Avatar and Icons

We can add avatars and icons to out lists.
<Example name="avatar" />

### Nested

Using the `ListGroup` component you can create infinite levels of depth and set custom offsets.
<Example name="nested" />

### Subheading and Dividers

Lists can contain multiple subheaders and dividers.
<Example name="subheading" />

### Navigation

Lists can receive an alternative `nav` styling that reduces the width `ListItem` takes up as well as adding a border radius.
<Example name="navigation" />
