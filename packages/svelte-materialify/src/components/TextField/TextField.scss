@import "./variables";

label {
  max-width: 90%;
  overflow: hidden;
  text-overflow: ellipsis;
  top: $text-field-label-top;
  pointer-events: none;
  transform-origin: top left;

  &.active {
    max-width: 133%;
    transform: $text-field-label-active-transform;
  }
}

input {
  caret-color: inherit;
  flex: 1 1 auto;
  line-height: $text-field-line-height;
  padding: $text-field-padding;
  max-width: 100%;
  min-width: 0;
  width: 100%;
}

.s-text-field__wrapper {
  width: 100%;
  color: $primary-color;
  caret-color: currentColor;
  border-radius: inherit;
  display: flex;
  align-items: center;
  transition: 0.3s map-get($transitions, "swing");

  &::before,
  &::after {
    border-radius: inherit;
    width: inherit;
    bottom: -1px;
    content: "";
    left: 0;
    position: absolute;
    transition: 0.3s map-get($transitions, "swing");
    pointer-events: none;
  }

  &::before {
    border-color: var(--theme-text-fields-border);
    border-style: solid;
    border-width: thin 0 0 0;
  }

  &::after {
    border-color: currentColor;
    border-style: solid;
    border-width: thin 0 thin 0;
    transform: scaleX(0);
  }

  &:hover {
    &::before {
      border-color: var(--theme-text-primary);
    }
  }

  &.focused {
    &::after {
      transform: scale(1);
    }

    label {
      color: inherit;
    }
  }
}

:global {
  .s-text-field {
    &.outlined,
    &.solo,
    &.filled {
      .s-text-field__wrapper {
        padding: $text-field-wrapper-padding;
      }
    }

    &.filled,
    &.outlined {
      .s-text-field__wrapper {
        min-height: $text-field-filled-outlined-min-height;
      }
    }

    &.outlined,
    &.solo,
    &.rounded {
      .s-text-field__wrapper::after {
        display: none;
      }
    }

    &.outlined,
    &.solo {
      border-radius: $text-field-border-radius;
    }

    &.outlined {
      .s-text-field__wrapper {
        &::before {
          top: 0;
          border-width: thin;
        }

        &.focused::before {
          border-color: currentColor;
          border-width: 2px;
        }
      }

      label {
        top: $text-field-outlined-label-top;

        &.active {
          padding: 0 4px;
          background-color: var(--theme-surface);
          transform: $text-field-outlined-label-active-transform;
        }
      }
    }

    &.solo {
      .s-text-field__wrapper {
        min-height: $text-field-solo-min-height;
        @include elevation($text-field-solo-depth);

        &::before {
          display: none;
        }
      }
    }

    &.filled {
      border-radius: $text-field-filled-border-radius;

      .s-text-field__wrapper {
        background-color: var(--theme-text-fields-filled);

        &:hover {
          background-color: var(--theme-text-fields-filled-hover);
        }
      }

      label {
        top: $text-field-filled-label-top;

        &.active {
          transform: $text-field-filled-label-active-transform;
        }
      }

      input {
        margin-top: $text-field-filled-margin-top;
      }
    }

    &.dense {
      input {
        padding: $text-field-dense-padding;
      }

      &.outlined,
      &.filled {
        .s-text-field__wrapper {
          min-height: $text-field-filled-outlined-dense-min-height;
        }
      }

      &.outlined {
        label {
          top: $text-field-outlined-dense-label-top;

          &.active {
            transform: $text-field-outlined-dense-label-active-transform;
          }
        }
      }

      &.solo {
        .s-text-field__wrapper {
          min-height: $text-field-solo-dense-min-height;
        }
      }

      &.filled {
        input {
          margin-top: $text-field-filled-margin-top / 2;
        }

        label {
          top: $text-field-filled-dense-label-top;

          &.active {
            transform: $text-field-filled-dense-label-active-transform;
          }
        }
      }
    }
  }
}
